source('~/.active-rstudio-document', echo=TRUE)
n
regour
library(PoEdata)
food
data(food)
food.shape
shape(food)
nrow(food)
knitr::opts_chunk$set(echo = TRUE)
# In order to download the data we will need the "devtools" package.
# Remember that to install a package from CRAN we can use the install.packages("name") command.
# Warning: You only need to run the code below once and it may not run properly if you use "knit". If you are having problems, try copying and pasting the line into the console.
#install.packages("devtools")
# Once installed we need tell R that we want to use it
# Warning: For this line to work, you must have "devtools" installed.
library("devtools")
# Finally, we can use the install_git function in the devtools package to download the data
# Warning: You only need to run the code below once and it may not run properly if you use "knit". If you are having problems, try copying and pasting the line into the console.
#install_git("https://github.com/ccolonescu/PoEdata")
# This has downloaded the book datasets for us. But remember we still need to tell R we want to use them
# Warning: For this line to work, you must have run the previous "install_git" line (just once)
library(PoEdata)
# Ask R for help on the data function
#?data
# Can you see from the description how to learn what available datasets are?
data()
# The datasets listed under the PoEData library are the ones from the book.
# The `food` file contains the data on food expenditures.
# Can you figure out how to load the data sets by using ?data ?
data(food)
# Type the variable food to see what is in it
food
# Display only all the first five rows of the food dataset
food[1:5,]
# Run a regression of food_exp on income
lm(food_exp ~ income, food)
# Ask R how the function `lm` works
?lm
# Run a regression of food_exp on income and save output into an object called regout
regout <- lm(food_exp ~ income, food)
# Type the name regout to see what has been stored into this object
regout
# Use the function attributes to learn what is in regout
attributes(regout)
# Apply the attributes function to regsum
attributes(regsum)
# Apply the summary function to regout
summary(regout)
# As always we can save the output into an object using the <- command.
# Save the output into an object called regsum
regsum <- summary(regout)
# Apply the attributes function to regsum
attributes(regsum)
# Print oute the estimate of sigma epsilon squared
regsum$sigma
# Note that it should match the number we got earlier
(sum((regout$residuals^2)/n2))^(0.5)
# Apply the attributes function to regsum
attributes(regsum)
# Print out the r squared value of the regression
regsum$r.squared
# In order to download the data we will need the "devtools" package.
# Remember that to install a package from CRAN we can use the install.packages("name") command.
# Warning: You only need to run the code below once and it may not run properly if you use "knit". If you are having problems, try copying and pasting the line into the console.
install.packages("devtools")
# Once installed we need tell R that we want to use it
# Warning: For this line to work, you must have "devtools" installed.
library("devtools")
# Finally, we can use the install_git function in the devtools package to download the data
# Warning: You only need to run the code below once and it may not run properly if you use "knit". If you are having problems, try copying and pasting the line into the console.
install_git("https://github.com/ccolonescu/PoEdata")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
knitr::opts_chunk$set(echo = TRUE)
# In order to download the data we will need the "devtools" package.
# Remember that to install a package from CRAN we can use the install.packages("name") command.
# Warning: You only need to run the code below once and it may not run properly if you use "knit". If you are having problems, try copying and pasting the line into the console.
#install.packages("devtools")
# Once installed we need tell R that we want to use it
# Warning: For this line to work, you must have "devtools" installed.
library("devtools")
# Finally, we can use the install_git function in the devtools package to download the data
# Warning: You only need to run the code below once and it may not run properly if you use "knit". If you are having problems, try copying and pasting the line into the console.
#install_git("https://github.com/ccolonescu/PoEdata")
# This has downloaded the book datasets for us. But remember we still need to tell R we want to use them
# Warning: For this line to work, you must have run the previous "install_git" line (just once)
library(PoEdata)
install_git("https://github.com/ccolonescu/PoEdata")
library("devtools")
install_git("https://github.com/ccolonescu/PoEdata")
library(PoEdata)
data()
data(food)
# Ask R for help on the data function
#?data
# Can you see from the description how to learn what available datasets are?
data()
# The datasets listed under the PoEData library are the ones from the book.
# The `food` file contains the data on food expenditures.
# Can you figure out how to load the data sets by using ?data ?
data(food)
?data
food
food[1:5,]
food[1:10,]
food[,1]
food[1:10,1]
food[3:10,2]
food[3:10,1:2]
# Ask R how the function `lm` works
?lm
atttributes(regout)
attributes(regour)
attributes(regout)
# Print out the coefficients in regout
regout$coefficients
# Print out the intercept in the regression
regout$coefficients[1]
# Print out the first 10 residuals from the regression
regout$residuals[1:10]
# Print out all the predicted values from the regression
regout$fitted.values
n <- nrow(food)
n
sum((regout$residuals^2)/n)
(sum((regout$residuals^2)/n))^(0.5)
sum(c(1,2,3,4))
c(1,2,3,4)^2
summary(regout)
83.416/43.410
regsum <- summary(regout)
attributes(regsum)
regsum$r.squared
?summary
plot(food$income, food$food_exp)
plot(food$income, food$food_exp)
plot(food$income, food$food_exp)
# Draw a scatter plot with income in the x axis and food expenditure on the y axis
plot(food$income, food$food_exp)
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
# In order to download the data we will need the "devtools" package.
# Remember that to install a package from CRAN we can use the install.packages("name") command.
# Warning: You only need to run the code below once and it may not run properly if you use "knit". If you are having problems, try copying and pasting the line into the console.
#install.packages("devtools")
# Once installed we need tell R that we want to use it
# Warning: For this line to work, you must have "devtools" installed.
library("devtools")
# Finally, we can use the install_git function in the devtools package to download the data
# Warning: You only need to run the code below once and it may not run properly if you use "knit". If you are having problems, try copying and pasting the line into the console.
#install_git("https://github.com/ccolonescu/PoEdata")
# This has downloaded the book datasets for us. But remember we still need to tell R we want to use them
# Warning: For this line to work, you must have run the previous "install_git" line (just once)
library(PoEdata)
# Ask R for help on the data function
#?data
# Can you see from the description how to learn what available datasets are?
data()
# The datasets listed under the PoEData library are the ones from the book.
# The `food` file contains the data on food expenditures.
# Can you figure out how to load the data sets by using ?data ?
data(food)
# Type the variable food to see what is in it
food
# Run a regression of food_exp on income and save output into an object called regout
regout <- lm(food_exp ~ income, food)
# Type the name regout to see what has been stored into this object
regout
# Apply the summary function to regout
summary(regout)
# As always we can save the output into an object using the <- command.
# Save the output into an object called regsum
regsum <- summary(regout)
# Draw a scatter plot with income in the x axis and food expenditure on the y axis
plot(food$income, food$food_exp)
# Draw a scatter plot with income in the x axis and food expenditure on the y axis
plot(food$income, food$food_exp, xlab = "Income", ylab = "Food Expenditures")
# Draw a scatter plot with income in the x axis and food expenditure on the y axis
plot(food$income, food$food_exp, xlab = "Income", ylab = "Food Expenditures")
# Now add the fitted line from our regression
curve(regout$coefficients[1] + regout$coefficients[2]*x, add = TRUE)
# Draw a scatter plot with income in the x axis and food expenditure on the y axis
plot(food$income, food$food_exp, xlab = "Income", ylab = "Food Expenditures")
# Now add the fitted line from our regression
curve(regout$coefficients[1] + regout$coefficients[2]*x)
# Draw a scatter plot with income in the x axis and food expenditure on the y axis
plot(food$income, food$food_exp, xlab = "Income", ylab = "Food Expenditures")
# Now add the fitted line from our regression
curve(regout$coefficients[1] + regout$coefficients[2]*x, add = TRUE)
# Clear the workspace
rm(list = ls())
# Since we cleared everything we need to tell R again that we want to use the PoE datasets
library(PoEdata)
# And reload the food data
data(food)
lm(food_exp ~ income^2, food)
# Next let's regress food expenditure on income squared. Note the use of I() function
regout <- lm(food_exp ~ I(income^2), food)
# Let's do a scatter plot
plot(food$income, food$food_exp, xlab = "Income", ylab = "Food Expenditures")
# Now add the fitted line from our regression
curve(regout$coefficients[1] + regout$coefficients[2]*x^2, add = TRUE)
